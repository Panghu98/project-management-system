<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="group.uchain.project.mapper.ProjectInfoMapper"
>

    <insert id="excelToDatabase" parameterType="list">
        insert into project.project_info (`id`,`category`, `instruction`, `level`, `grade`, `number`, `variety`, `score`, `leader`, `division`,`date`,deadline)
        values
        <foreach collection="list" separator="," index="" item="projectInfo">
            (
            #{projectInfo.id,jdbcType=VARCHAR},
            #{projectInfo.category,jdbcType=VARCHAR},
            #{projectInfo.instruction,jdbcType=VARCHAR},
            #{projectInfo.level,jdbcType=VARCHAR},
            #{projectInfo.grade,jdbcType=VARCHAR},
            #{projectInfo.number,jdbcType=VARCHAR},
            #{projectInfo.variety,jdbcType=VARCHAR},
            #{projectInfo.score,jdbcType=DOUBLE},
            #{projectInfo.leader,jdbcType=VARCHAR},
            #{projectInfo.division,jdbcType=SMALLINT},
            #{projectInfo.date,jdbcType=DATE},
            #{projectInfo.deadline,jdbcType=DATE}
            )
        </foreach>
    </insert>

    <update id="updateProjectInfo">
#         update project_info set id,
    </update>

    <update id="setDeadline">
            update project_info
        <set>
            <if test="id!=null">
                deadline = #{date,jdbcType=DATE}
            </if>
        </set>
            where id = #{id}
    </update>

    <update id="updateAllocationStatus">
        update project_info
            set allocation_status = #{status}
            where id = #{id}
    </update>

    <delete id="deleteProjectInfo" parameterType="string">
        delete from project_info where id = #{id}
    </delete>

    <!--通过获取ID信息  判断数据库中项目编号是否已经存在-->
    <select id="getRepeatNums" resultType="java.lang.String">
        select id as number
            from project_info
        where id in
        <foreach collection="list" separator="," index="" item="id" open="(" close=")">
            #{id,jdbcType=VARCHAR}
        </foreach>
    </select>
    <!--使用内连接代替子查询进行SQL优化-->
    <!--通过AuthenticationContext中放入用户ID（用户名无法作为用户的唯一标示）来获取用户所对应的项目信息-->
    <select id="getAllProjectInfoByUserId" resultType="group.uchain.project.dto.ProjectInfo">
        select p.`id`,
               `category`,
               `instruction`,
               `level`,
               `grade`,
               `number`,
               `variety`,
               `score`,
               `leader`,
               `division`,
               allocation_status as allocationStatus,
               deadline,
               count(f.project_id) as fileUploadStatus
        from project_info p
            left join file_info f
                on deadline = '1970-01-01' and p.id = f.project_id
            inner join user u on (p.`leader` = u.username)
                where u.user_id =#{userId} and p.deadline != '1970-01-01'
        group by p.id
        order by allocationStatus
    </select>
    <!--Mybatis是根据查询到的记录数进行转换的(1表示为true,0表示为false) 。
            然而，如果查询到多条记录(大于1)，则返回的布尔值为false-->
    <!--获取所有未设置截止日期的项目信息-->
    <select id="getAllProjectInfo" resultType="group.uchain.project.dto.ProjectInfo">
        select p.id as id,
               `category`,
               `instruction`,
               `level`,
               `grade`,
               `number`,
               `variety`,
               `score`,
               `leader`,
               `division`,
               `deadline`,
               `allocation_status` as allocationStatus,
               count(f.project_id) as fileUploadStatus
          from project_info p left join file_info f
        on p.id = f.project_id
        where  deadline = '1970-01-01'
        group by p.id
        order by allocation_status,date
    </select>
    <!--获取所有已设置截止日期的项目-->
    <select id="getDeadlineProjectInfo" resultType="group.uchain.project.dto.ProjectInfo">
        select p.id  as id,
               `category`,
               `instruction`,
               `level`,
               `grade`,
               `number`,
               `variety`,
               `score`,
               `leader`,
               `division`,
               `deadline`,
               `allocation_status` as allocationStatus,
               count(f.project_id) as fileUploadStatus
        from project_info p
                 left join file_info f
        on p.id = f.project_id
        where  deadline != '1970-01-01'
        group by p.id
        order by allocation_status, date
    </select>

    <select id="getProjectInfoByProjectId" resultType="group.uchain.project.dto.ProjectInfo">
        select `id`,`category`, `instruction`, `level`, `grade`, `number`,
               `variety`, `score`, `leader`, `division`,`date`,`allocation_status` as allocationStatus,deadline
        from project_info
        where id = #{id}
    </select>

</mapper>